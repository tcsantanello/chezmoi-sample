#!/usr/bin/env bash

set -eou pipefail

: ${TMPDIR:=/tmp}

null() { dd if=/dev/zero bs=1 count=1 status=none; }

data() {
  printf "$(echo ${_BYTES} | sed 's,\(..\),\\x\1,g')"
  cat -
}

newinput() {
  # New input on fd #4 that consumes new stdin
  exec 4< <(eval "$@")
  exec 0<&- # Close stdin
  exec 0<&4 # Duplicate 4 as stdin
  exec 4<&- # Close 4
  _BYTES="" # Reinitialize the byte buffer
}

redirect() {
  # Reconstruct original stream
  newinput data
  # Run next pass
  newinput "$@"
}

filedmp() {
  local ext="${1}"
  local tmp=$(mktemp ${TMPDIR}/XXXXXX.${ext})
  data >${tmp}
  echo "${tmp}"
}

extract() {
  local name=$(filedmp "$1")
  local file=$(eval "$3" "${name}" | grep "$4")
  local base=$(basename "${file}")
  eval $2 >/dev/null

  test -f "${TMPDIR}/${file}" &&
    mv "${TMPDIR}/${file}" "${TMPDIR}/${base}"

  newinput "
    $2;
    rm \"${name}\"
  "
}

sample() {
  _SAMPLE=$(dd if=/dev/fd/0 count=1 bs=${1:-3} status=none | od -An -vtx1 | tr -d ' ' | tr -d '\n')
  _BYTES="${_BYTES:-}${_SAMPLE}"
}

tarlst() { tar tf $1; }
ziplst() {
  unzip -l "$1" | awk '
    !/---| files$|\/$/ && idx > 0 { print substr($0,idx); }
    /Name/ && idx==0 { idx=index($0,"Name") }'
}

while :; do
  sample 3

  case "${_SAMPLE^^}" in
    # ZStd
    28B52F) redirect zstdcat - ;;
    # LZF
    5A5601) redirect lzf -d -f ;;
    # LZ4
    04224D) redirect lz4 -dc ;;
    # LZMA
    5D0000) redirect lzma -dc ;;
    # XZ
    FD377A) redirect xz -dc ;;
    # Compress
    1F9D90) redirect uncompress -c -d ;;
    # Gzip
    1F8B08) redirect zcat - ;;
    # BZip2
    425A68) redirect bzcat - ;;
    # Zip
    504B*)
      extract zip "unzip -p -qq \"\${name}\" \"\${file}\"" ziplst "${1}"
      shift
      ;;

    *)
      # Advance to tar magic
      sample 254
      sample 5
      case "${_SAMPLE}" in
        7573746172) # Tar
          extract tar "tar xf \"\${name}\" --to-stdout \"\${file}\"" tarlst "${1}"
          shift
          ;;
        *) # Literally anything else is just data
          data
          exit 0
          ;;
      esac
      ;;
  esac
done

exit 0
